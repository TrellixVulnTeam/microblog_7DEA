2021-12-22 10:22:57,289 ERROR: Exception on / [GET] [in /home/ebanks/workspace/microblog/venv/lib/python3.8/site-packages/flask/app.py:1457]
Traceback (most recent call last):
  File "/home/ebanks/workspace/microblog/venv/lib/python3.8/site-packages/sqlalchemy/orm/clsregistry.py", line 393, in _resolve_name
    rval = d[token]
  File "/home/ebanks/workspace/microblog/venv/lib/python3.8/site-packages/sqlalchemy/util/_collections.py", line 746, in __missing__
    self[key] = val = self.creator(key)
  File "/home/ebanks/workspace/microblog/venv/lib/python3.8/site-packages/sqlalchemy/orm/clsregistry.py", line 372, in _access_cls
    return self.fallback[key]
KeyError: 'Notification'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/ebanks/workspace/microblog/venv/lib/python3.8/site-packages/flask/app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/ebanks/workspace/microblog/venv/lib/python3.8/site-packages/flask/app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/ebanks/workspace/microblog/venv/lib/python3.8/site-packages/flask/app.py", line 1514, in full_dispatch_request
    rv = self.preprocess_request()
  File "/home/ebanks/workspace/microblog/venv/lib/python3.8/site-packages/flask/app.py", line 1857, in preprocess_request
    rv = self.ensure_sync(before_func)()
  File "/home/ebanks/workspace/microblog/app/main/routes.py", line 16, in before_request
    if current_user.is_authenticated:
  File "/home/ebanks/workspace/microblog/venv/lib/python3.8/site-packages/werkzeug/local.py", line 432, in __get__
    obj = instance._get_current_object()
  File "/home/ebanks/workspace/microblog/venv/lib/python3.8/site-packages/werkzeug/local.py", line 554, in _get_current_object
    return self.__local()  # type: ignore
  File "/home/ebanks/workspace/microblog/venv/lib/python3.8/site-packages/flask_login/utils.py", line 26, in <lambda>
    current_user = LocalProxy(lambda: _get_user())
  File "/home/ebanks/workspace/microblog/venv/lib/python3.8/site-packages/flask_login/utils.py", line 346, in _get_user
    current_app.login_manager._load_user()
  File "/home/ebanks/workspace/microblog/venv/lib/python3.8/site-packages/flask_login/login_manager.py", line 318, in _load_user
    user = self._user_callback(user_id)
  File "/home/ebanks/workspace/microblog/app/models.py", line 208, in load_user
    return User.query.get(int(id))
  File "/home/ebanks/workspace/microblog/venv/lib/python3.8/site-packages/flask_sqlalchemy/__init__.py", line 550, in __get__
    mapper = orm.class_mapper(type)
  File "/home/ebanks/workspace/microblog/venv/lib/python3.8/site-packages/sqlalchemy/orm/base.py", line 442, in class_mapper
    mapper = _inspect_mapped_class(class_, configure=configure)
  File "/home/ebanks/workspace/microblog/venv/lib/python3.8/site-packages/sqlalchemy/orm/base.py", line 421, in _inspect_mapped_class
    mapper._check_configure()
  File "/home/ebanks/workspace/microblog/venv/lib/python3.8/site-packages/sqlalchemy/orm/mapper.py", line 1916, in _check_configure
    _configure_registries({self.registry}, cascade=True)
  File "/home/ebanks/workspace/microblog/venv/lib/python3.8/site-packages/sqlalchemy/orm/mapper.py", line 3429, in _configure_registries
    _do_configure_registries(registries, cascade)
  File "/home/ebanks/workspace/microblog/venv/lib/python3.8/site-packages/sqlalchemy/orm/mapper.py", line 3468, in _do_configure_registries
    mapper._post_configure_properties()
  File "/home/ebanks/workspace/microblog/venv/lib/python3.8/site-packages/sqlalchemy/orm/mapper.py", line 1933, in _post_configure_properties
    prop.init()
  File "/home/ebanks/workspace/microblog/venv/lib/python3.8/site-packages/sqlalchemy/orm/interfaces.py", line 231, in init
    self.do_init()
  File "/home/ebanks/workspace/microblog/venv/lib/python3.8/site-packages/sqlalchemy/orm/relationships.py", line 2150, in do_init
    self._process_dependent_arguments()
  File "/home/ebanks/workspace/microblog/venv/lib/python3.8/site-packages/sqlalchemy/orm/relationships.py", line 2245, in _process_dependent_arguments
    self.target = self.entity.persist_selectable
  File "/home/ebanks/workspace/microblog/venv/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py", line 1113, in __get__
    obj.__dict__[self.__name__] = result = self.fget(obj)
  File "/home/ebanks/workspace/microblog/venv/lib/python3.8/site-packages/sqlalchemy/orm/relationships.py", line 2112, in entity
    argument = self._clsregistry_resolve_name(self.argument)()
  File "/home/ebanks/workspace/microblog/venv/lib/python3.8/site-packages/sqlalchemy/orm/clsregistry.py", line 397, in _resolve_name
    self._raise_for_name(name, err)
  File "/home/ebanks/workspace/microblog/venv/lib/python3.8/site-packages/sqlalchemy/orm/clsregistry.py", line 375, in _raise_for_name
    util.raise_(
  File "/home/ebanks/workspace/microblog/venv/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 207, in raise_
    raise exception
sqlalchemy.exc.InvalidRequestError: When initializing mapper mapped class User->user, expression 'Notification' failed to locate a name ('Notification'). If this is a class name, consider adding this relationship() to the <class 'app.models.User'> class after both dependent classes have been defined.
2021-12-22 10:23:34,241 INFO: Microblog startup [in /home/ebanks/workspace/microblog/app/__init__.py:85]
